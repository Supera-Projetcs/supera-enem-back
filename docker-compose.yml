volumes:
  supera_enem_postgres_data: {}
  supera_enem_postgres_backup: {}
  keycloak_data: {}
  minio_data: {}
  minio_config: {}
  grafana_data: {}
  prometheus_data: {}

services:
  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    image: supera_enem_postgres:latest
    container_name: supera_enem_postgres
    volumes:
      - supera_enem_postgres_data:/var/lib/postgresql/data
      - supera_enem_postgres_backup:/backups
    env_file:
      - .env
    ports:
      - "5432:5432"

  app:
    build:
      context: .
      dockerfile: ./compose/spring/Dockerfile
    image: supera_enem-app:latest
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - keycloak
      - postgres
      - minio

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    env_file:
      - ./.envs/.postgres
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    links:
      - postgres
      - prometheus

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    env_file:
      - .env
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
    command: start-dev
    ports:
      - "8081:8080"
    volumes:
      - ./scripts/init-keycloak.sql:/docker-entrypoint-initdb.d/init-keycloak.sql
      - keycloak_data:/opt/keycloak/data
    depends_on:
      - postgres

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" #Interface
      - "9001:9001" #ADM
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio